(name 'JSON-jupiter.43' message '- updated _id to refer to oid- Mapless>>= updated to support comparison to nil' id '142fa99c-e3b4-4662-bbb0-a7da6d5a4db0' date '02/17/2015' time '12:39:28' author 'jupiter' ancestors ((name 'JSON-dkh.42' message 'Issue #5: expectedFailures defined for MaplessGemstoneTest>>expectedFailures ... ' id '29befda4-31c2-4c6f-814b-3123776ffca1' date '01/24/2015' time '12:02:09' author 'dkh' ancestors ((name 'JSON-dkh.41' message 'take care of JSON tests ... 3 expected to fail because of Unicode (see Issue #3)' id '93d0f4fe-17be-491f-aceb-9b0edcacdefd' date '01/24/2015' time '11:40:30' author 'dkh' ancestors ((name 'JSON-SebastianHeidbrink.40' message 'first public version of the gemstone port' id 'cee14e3e-a1ba-46a3-b5fb-c0992cb736e1' date '01/23/2015' time '14:28:22' author 'SebastianHeidbrink' ancestors ((name 'JSON-SebastianHeidbrink.39' message 'first public version of the gemstone port' id '48ce4239-98ad-4f0d-a153-f4d30a9b5d5a' date '01/23/2015' time '14:25:48' author 'SebastianHeidbrink' ancestors ((name 'JSON-SebastianHeidbrink.38' message '' id '14795319-3b7b-4c98-b39f-068baae0f233' date '12/12/2014' time '16:29:51' author 'SebastianHeidbrink' ancestors ((name 'JSON-PaulDeBruicker.37' message 'can now get a better idea of the specific differences between two JsonObjects with #jsonDifferencesWith: ' id 'fb124d85-dd85-4deb-9cf0-abc10339ad22' date '07/17/2014' time '05:29:41' author 'PaulDeBruicker' ancestors ((name 'JSON-ul.35' message '- fix: string encoding conforms to the spec. This was fixed once already, so please don''t break it again. Thanks.' id '79d55347-8eb5-bc40-b68c-0df315a87e85' date '11/09/2010' time '04:30:48' author 'ul' ancestors ((name 'JSON-hjh.34' message 'Speed enhancement by replacing    self peekwith    stream peekCredit: Igor Stasenko' id '4d75614b-aec0-4cca-8016-9a40eac2ac3e' date '05/13/2010' time '01:48:26' author 'hjh' ancestors ((name 'JSON-hjh.33' message 'Speed up of 5..7% in writing according to Igor' id '4bd6d910-0291-428a-84e2-12e989e3a27d' date '05/13/2010' time '01:32:57' author 'hjh' ancestors ((name 'JSON-hjh.32' message 'In the project SCouchDB a copy of JSON is maintained.This merges part of the changes back, in particularSCouchDB projectJSON-Igor.Stasenko.28JSON-Igor.Stasenko.29JSON-rh.30JSON-rh.31JsonObject is now a subclass of Dictionary instead of Object. So there is no need to implement the Dictionary interface.Fix for converting Unicode characters to \uNNNN format (missing padding to 4 characters)More details see wiki' id '1d34420c-06d5-4101-9f70-09cd4b0c4925' date '05/12/2010' time '10:31:47' author 'hjh' ancestors ((name 'JSON-rh.31' message 'fix for converting unicode characters to \uNNNN format (missing padding to 4 characters)' id 'b9aaf120-34ac-834e-b732-cabe762c7486' date '03/02/2010' time '12:35:47' author 'rh' ancestors ((name 'JSON-rh.30' message 'made JsonObject behave more like javascript objects (return nil for non-existing slot, instead of DNU)' id 'c07b38a1-bee6-3a4c-81e2-0b62122d358b' date '03/01/2010' time '07:51:49' author 'rh' ancestors ((name 'JSON-Igor.Stasenko.29' message '- extending Object with #asJsonString' id '37db1667-1121-4549-bba3-8c1497a8a7a9' date '01/12/2010' time '01:20:30' author 'Igor.Stasenko' ancestors ((name 'JSON-Igor.Stasenko.28' message '- my branch of SqS/JSON project with a couple of optimizations' id 'e3531526-86b7-854d-be79-9caa881a369f' date '01/08/2010' time '08:43:23' author 'Igor.Stasenko' ancestors ((name 'JSON-dkb.27' message 'Replace a number of _ assignments with :=' id '62aae4be-7719-004b-bc41-1f81e89bf6b0' date '12/25/2009' time '03:10:53' author 'dkb' ancestors ((name 'JSON-matthias.berth.26' message 'Added Association>>jsonWriteOn: This makes it easier to write key-value pairs, for example:  {#date -> document date asString. 	#author -> document author name. 	#title -> document tile}		do: [:each | each jsonWriteOn: aStream]		separatedBy: [aStream nextPutAll: '', ''].		The association''s key will be converted to a string (using #asString), the value must understand  #jsonWriteOn: .' id '7c715040-c8a1-485f-a5e8-6517ca2c3d56' date '11/19/2009' time '18:03:27' author 'matthias.berth' ancestors ((name 'JSON-tonyg.25' message 'Merge avi.24 with ul.15, fix the tests, rudimentary (and possibly incorrect?) support for non-ASCII characters in strings, Improvements to JsonObject to get it past the tests, ' id '45705127-0bf3-4f62-8652-83d3ef15bf33' date '08/21/2009' time '23:00:03' author 'tonyg' ancestors ((name 'JSON-avi.24' message 'adding to the dip repo' id '9aab0844-667d-4c58-a7be-ba8994f25d0f' date '05/10/2008' time '14:22:12' author 'avi' ancestors ((name 'JSON-avi.22' message 'for ben' id '02d77deb-3eb0-42e2-8117-b12e7bb70412' date '03/23/2008' time '14:10:56' author 'avi' ancestors ((name 'JSON-avi.21' message 'Collection>>jsonWriteOn:' id '6f218b36-8ac8-4960-8b6f-ffa31ba95a85' date '03/20/2008' time '18:08:18' author 'avi' ancestors ((name 'JSON-avi.20' message '#properties accessor' id 'ec343d5c-099b-4891-856a-5bceba6375b3' date '03/16/2008' time '19:16:08' author 'avi' ancestors ((name 'JSON-cwp.19' message 'Bugfix: JsonObject>>at:ifAbsent: was answering the association, rather than the value.' id '2c08f713-67f8-435e-be6a-b8f3dfc924fb' date '08/02/2007' time '01:40:54' author 'cwp' ancestors ((name 'JSON-cwp.18' message 'merge' id 'f2af32a6-f18e-4cd0-a742-a4991411de39' date '07/14/2007' time '01:26:25' author 'cwp' ancestors ((name 'JSON-cwp.17' message 'JsonObject now maintains the order of its properties, so that it can be serialized consistently.' id '0643f0ce-de8d-46fa-b4f0-416214b09ceb' date '07/14/2007' time '00:49:31' author 'cwp' ancestors () stepChildren ())(name 'JSON-cwp.16' message 'Add a method for utf-8 encoding.' id '3fbdc683-85b2-4ceb-be84-6154eca34cb5' date '05/21/2007' time '21:18:27' author 'cwp' ancestors ((name 'JSON-cwp.15' message 'Added couple extension methods.' id '00f9ed7d-27a4-423d-ae41-8ef213fb638c' date '03/23/2007' time '22:10:24' author 'cwp' ancestors ((name 'JSON-cwp.14' message 'Added a JsonObject with convenience accessors implemented via DNU.' id 'b5a69e58-a3f1-41fc-bafd-530a781a00ce' date '10/21/2006' time '01:22:50' author 'cwp' ancestors ((name 'JSON-cwp.13' message 'Tests fixed to run in Squeak 3.7.' id 'e618591e-2daf-4c52-9fd6-9d19a96a714b' date '10/19/2006' time '19:07:58' author 'cwp' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'JSON-ul.15' message '- fix: Control characters are escaped.- enh: rendering time decreased (especially for strings)- unnecessary spaces after commas and columns are not rendered' id 'c5bb462e-3d57-aa44-b199-0a8bada56309' date '11/04/2008' time '07:31:42' author 'ul' ancestors ((name 'JSON-djr.14' message 'Only reset the stream after setting it if it responds to #reset' id 'bc2c89b8-c2c5-4c97-b0e0-f42d95680878' date '10/07/2007' time '00:22:39' author 'djr' ancestors ((name 'JSON-aesp.13' message 'fixed bug with passed stream position over end, added simple unicode \uXXXX unescaping while reading json' id '4ea4481a-2ad9-11dc-8583-00145127fcd4' date '07/05/2007' time '13:22:52' author 'aesp' ancestors ((name 'JSON-sp.12' message 'empty log message' id 'e9b5cbf9-cf02-11da-9c1d-000a95c90546' date '04/18/2006' time '19:43:57' author 'sp' ancestors ((name 'JSON-tonyg.11' message 'Simple bean-like instance-variable save utility.' id '0150b3b0-5169-c049-9aa2-f59faca78bb7' date '11/30/2005' time '16:42:51' author 'tonyg' ancestors ((name 'JSON-tonyg.10' message 'Abstract away the implementation detail (the syntax) of writing constructor JSON values.' id 'cf3bfc65-8ebe-6c46-bf48-60e109e4968f' date '11/30/2005' time '16:34:22' author 'tonyg' ancestors ((name 'JSON-tonyg.9' message 'Test cases for missing constructors.' id '3d192828-babc-e044-8ae5-2f4cfc785cc9' date '11/29/2005' time '18:10:28' author 'tonyg' ancestors ((name 'JSON-tonyg.8' message 'Support constructor notation (@keyword value).' id '92f141da-bff5-d74a-9f0f-1a39c5573663' date '11/29/2005' time '18:00:49' author 'tonyg' ancestors ((name 'JSON-tonyg.7' message 'Add "mimeType" class method' id '0d8c7028-3fb4-fe43-82f1-86c426569c62' date '08/24/2005' time '20:22:45' author 'tonyg' ancestors ((name 'JSON-tonyg.6' message 'Deal with characters requiring escaping in strings being encoded to JSON.' id '34fdb8f6-0f33-11da-b78c-000a95e87d06' date '08/17/2005' time '16:25:56' author 'tonyg' ancestors ((name 'JSON-tonyg.5' message 'Support exponents in numeric syntax.' id '816e300c-0ef6-11da-8a34-000a95e87d06' date '08/17/2005' time '09:11:25' author 'tonyg' ancestors ((name 'JSON-tonyg.4' message 'Use a fresh string for each #render: call, instead of a literal empty string.' id '968f6c60-0eea-11da-8a34-000a95e87d06' date '08/17/2005' time '07:46:07' author 'tonyg' ancestors ((name 'JSON-tonyg.3' message 'Added Json class>>render:' id '168f3276-0ee9-11da-8a34-000a95e87d06' date '08/17/2005' time '07:35:22' author 'tonyg' ancestors ((name 'JSON-tonyg.2' message 'Implement writing, via method jsonWriteOn:.' id '21716cb2-0eb0-11da-9103-000a95e87d06' date '08/17/2005' time '00:47:39' author 'tonyg' ancestors ((name 'JSON-tonyg.1' message 'Initial revision. Parsing seems to work OK.' id '80db30c9-0ead-11da-9103-000a95e87d06' date '08/17/2005' time '00:28:51' author 'tonyg' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())